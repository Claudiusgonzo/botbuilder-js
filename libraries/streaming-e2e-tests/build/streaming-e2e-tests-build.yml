#
# Ensure BotFramework-Streaming library works in the browser by running tests after deploying a streaming-enabled JS Echo Bot and a React App that uses DLJS and WebChat.
# 

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

# TODO: variables
# BotName: defined in Azure
# AzureSubscription: defined in Azure
variables:
  runCodesignValidationInjection: false


stages:
  - stage: Deploy_Projects
    jobs:
      - job: Deploy_Bot
        variables:
          TargetProjectDir: '$(System.DefaultWorkingDirectory)\libraries\streaming-e2e-tests\bot'
          PackageName: 'botbuilder'
          ResourceGroup: 'ash-streaming-js'
          BotName: 'ash-streaming-bot'
        steps:
          - template: configure-to-bbjs-daily.yml
          - template: deploy-bot.yml

      - job: Create_React_App_With_Custom_DLJS
        variables:
          TargetProjectDir: '$(System.DefaultWorkingDirectory)\libraries\streaming-e2e-tests\react-app'
        steps: 
          - template: create-react-app.yml
      


      # get bf-streaming in DLJS -- add console.log maybe?
      # - job: Customize_DLJS
      #   steps:
      #     - template: configure-to-bbjs-daily.yml
      #     - task: PowerShell@2
      #       displayName: 'Pack and rename tgz'

          
          
          # - template: deploy_react_app.yml