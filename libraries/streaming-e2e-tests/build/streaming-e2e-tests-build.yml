#
# Ensure BotFramework-Streaming library works in the browser by running tests after deploying a streaming-enabled JS Echo Bot and a React App that uses DLJS and WebChat.
# 

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

# TODO: variables
# BotName: defined in Azure
# AzureSubscription: defined in Azure
variables:
  runCodesignValidationInjection: false
  RootReactPiecesDir: '$(System.DefaultWorkingDirectory)\libraries\streaming-e2e-tests\react-app'
  DLJSDir: '$(System.DefaultWorkingDirectory)\libraries\streaming-e2e-tests\react-app\BotFramework-DirectLineJS'

stages:
  - stage: Deploy_Projects
    jobs:
      # - job: Deploy_Bot
      #   variables:
      #     TargetProjectDir: '$(System.DefaultWorkingDirectory)\libraries\streaming-e2e-tests\bot'
      #     PackageName: 'botbuilder'
      #     ResourceGroup: 'ash-streaming-js'
      #     BotName: 'ash-streaming-bot'
      #   steps:
      #     - template: configure-to-bbjs-daily.yml
      #     - template: deploy-bot.yml

      # - job: Create_React_App_With_WebChat
      #   variables:
      #     TargetProjectDir: '$(RootReactPiecesDir)'
      #   steps: 
      #     - template: create-react-app.yml
      - job: Customize_DLJS
        variables:
          PackageName: 'botframework-streaming'
        steps:
          - template: customize-dljs.yml

      - job: Use_Custom_DLJS_In_React_App
        dependsOn:
          - Create_React_App_With_WebChat
          - Customize_DLJS
        condition: succeeded()
        variables:
          TargetProjectDir: '$(RootReactPiecesDir)\react-app'
        steps:
          - template: use-custom-dljs-in-webchat.yml
          
          
          # - template: deploy_react_app.yml